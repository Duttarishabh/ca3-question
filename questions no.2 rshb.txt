Solution for question no.21:

Implements a simple test case for locks, and another for condition variables. You can run the lock test from the kernel menu by issuing the sy2 command Similarly  the sy3 command will run the condition variable test. If the lock test reports “Lock test done” without reporting any failure messages, it has succeeded. The output from the condition variable test should be self-explanatory. Testing synchronization primitives like locks and condition variables is difficult. Both sy2 and sy3 are subject to false positives. In other words, an incorrect lock or condition variable implementation may 1 pass these test. However, if your implementation fails a test, there is definitely a problem. Since the synchronization tests are not perfect, we will use code inspection - in addition to testing - to evaluate your lock and condition variable implementations. Although you are free to implement locks however you want, you should not modify any of the kernel’s test programs, i.e., do not modify any of the files in kern/test. Furthermore, you should not make any changes to the way that the tests are invoked, e.g., do not change “sy2” to “sy2a”
